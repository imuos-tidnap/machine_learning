import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data Collection and Analysis"""

diabetes_dataset = pd.read_csv('/content/diabetes (2).csv')

diabetes_dataset.head()

diabetes_dataset.shape

#getting statistical measures of the data
diabetes_dataset.describe()

diabetes_dataset['Outcome'].value_counts()

"""0--> non-diabetic
1--> diabetic
"""

diabetes_dataset.groupby('Outcome').mean()

#seperating data and labels
x = diabetes_dataset.drop(columns ='Outcome', axis=1)   #axis =1-->dropping one column, axis=0--> dropping 1 row
y = diabetes_dataset['Outcome']

print(x)
print(y)

"""data standardiztion"""

scaler = StandardScaler()

scaler.fit(x)

standardize_data = scaler.transform(x)

print(standardize_data)

x = standardize_data
y = diabetes_dataset['Outcome']

#train test split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, stratify=y, random_state = 2)

print(x.shape, x_train.shape, x_test.shape)

classifier = svm.SVC(kernel = 'linear')

#training the svm
classifier.fit(x_train, y_train)

"""model evaluation
accuracy score
"""

#accuracy score for training data
x_train_prediction = classifier.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction, y_train)

print('Accuracy score is: ', training_data_accuracy)

#accuracy score for test data
x_test_prediction = classifier.predict(x_test)
testing_data_accuracy = accuracy_score(x_test_prediction, y_test)

print('Accuracy score is: ', testing_data_accuracy)

"""Making a predictive syatem"""

input_data = (6,148,72,35,0,33.6,0.627,50)

#changing into numpy array
input_data_as_np = np.asarray(input_data)

#reshape the array as we are predicting for 1 instance
input_data_reshaped = input_data_as_np.reshape(1,-1)

#standardize the input data
std_data = scaler.transform(input_data_reshaped)

prediction = classifier.predict(std_data)
print(prediction)

if prediction[0]==1:
  print('Diabetic patient')
else:
  print('Non Diabetic patient')

